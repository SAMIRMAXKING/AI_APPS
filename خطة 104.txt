الخطة 104: دعم تشغيل محلي متكامل لمشاريع الويب (Local Web Server Integration)

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ الهدف:
توفير سيرفر داخلي لتشغيل واستعراض مشاريع HTML/CSS/JS وPHP وNodeJS مباشرة من داخل التطبيق، دون الحاجة لتثبيت خوادم خارجية، مع دعم بيئات تطوير متكاملة وتفاعلية.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ المكونات الأساسية:
1. سيرفر محلي مدمج لتشغيل ملفات الويب.
2. دعم فتح مشاريع HTML وPHP وNodeJS تلقائيًا.
3. معاينة لحظية داخل نافذة مدمجة (Live Preview).
4. دعم إعادة التحميل التلقائي عند التعديل.
5. عرض الأخطاء في السيرفر/الصفحة بشكل تفاعلي.
6. تخصيص منفذ ومضيف (Port/Host).
7. دعم السيرفرات الطرفية: Flask, Express, PHP Built-in.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ التفاصيل البرمجية الدقيقة:

1. تشغيل المشاريع:
   - HTML/CSS/JS:
     - فتح باستخدام `http.server` (Python) أو `live-server`
   - PHP:
     - `php -S localhost:8000`
   - NodeJS:
     - `npm start` أو `node index.js`

2. الواجهة:
   - نافذة داخل التطبيق لعرض الموقع الحي (Embedded WebView)
   - خيارات:
     - [تشغيل] [إعادة تشغيل] [نسخ الرابط] [فتح في المتصفح]

3. التحميل الحي:
   - استخدام WebSocket أو livereload
   - عند تعديل ملف HTML/CSS → إعادة تحميل الصفحة تلقائيًا

4. سجل الأخطاء:
   - عرض أخطاء JavaScript أو PHP في نافذة منفصلة
   - تحليل نوع الخطأ وتقديم اقتراحات

5. الإعدادات:
   - اختيار منفذ التشغيل (مثل: 8000)
   - تعيين مجلد البداية (public أو www أو src)

━━━━━━━━━━━━━━━━━━━━━━━━━━━
تم الانتهاء من خطة 104 بالكامل، وجاهز لتوليد الخطة 105 فورًا إن رغبت.