الخطة 82: توليد مشاريع افتراضية تجريبية داخل التطبيق للتعلم والتدريب
(Generate Built-in Sample Projects for Learning)

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ الهدف:
تمكين المستخدمين من تجربة ميزات التطبيق أو تعلم البرمجة عبر مشاريع افتراضية مدمجة قابلة للتعديل، تُستخدم كبيئة تدريبية آمنة.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ المكونات الأساسية:
1. مجموعة مشاريع تعليمية جاهزة (Python, HTML, PHP).
2. كل مشروع يحتوي على ملفات + كود + README تعليمي.
3. إمكانية فتح أي مشروع والتعديل عليه مباشرة.
4. زر "إعادة تعيين المشروع" لاسترجاع النسخة الأصلية.
5. مشاريع متدرجة الصعوبة.
6. دعم مشاريع بـ Frontend و Backend.
7. عرض مساعد ذكي داخل كل مشروع لتقديم التوجيه.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ التفاصيل البرمجية الدقيقة:

1. قاعدة المشاريع:
   - يتم تخزينها داخل مجلد:
     `/resources/samples/`
   - كل مشروع يحوي:
     - ملفات الكود
     - assets (صور/أيقونات)
     - ملف `instructions.md` أو `guide.json`

2. أنواع المشاريع:
   - "آلة حاسبة بسيطة" – HTML/JS
   - "برنامج إدارة مهام" – Python TKinter
   - "واجهة تسجيل دخول" – PHP/MySQL
   - "مدونة بسيطة" – Flask أو Django

3. التحكم:
   - زر [تشغيل المشروع]
   - زر [إعادة المشروع]
   - زر [إظهار التعليمات]

4. التدرج:
   - Easy – Intermediate – Advanced
   - يعرض الوقت المتوقع – المفاهيم المغطاة

5. المساعد الذكي:
   - يظهر على الجانب (أو الرفيق الذكي)
   - يقول:
     “جرب تعديل هذا الزر واجعل لونه أزرق”
     “هل تريد أن أشرح لك هذا السطر؟”

━━━━━━━━━━━━━━━━━━━━━━━━━━━
تم الانتهاء من خطة 82 وسأبدأ مباشرة في تنفيذ خطة 83.