الخطة 74: دعم تحرير وتحويل البيانات بصيغ مختلفة داخل المشروع (Data Format Editing & Conversion)

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ الهدف:
تمكين المستخدم من عرض وتحرير وتحويل بيانات المشروع بين صيغ متعددة (JSON, CSV, XML, YAML وغيرها) بسهولة وبدون مغادرة بيئة العمل.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ المكونات الأساسية:
1. محرر بصري للبيانات بصيغ JSON / YAML / CSV.
2. تحويل فوري بين الصيغ المختلفة.
3. اكتشاف الصيغة تلقائيًا.
4. دعم التصحيح التلقائي للأخطاء البنائية.
5. تصدير واستيراد البيانات.
6. دعم عرض البيانات كجداول أو مخططات.
7. دعم "بحث واستبدال" داخل البيانات.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ التفاصيل البرمجية الدقيقة:

1. المحرر الذكي:
   - عند فتح ملف data.json:
     - يعرض كمخطط شجري Tree View أو جدول Table View
   - يمكن التبديل إلى وضع الكود

2. التحويل:
   - زر [تحويل إلى]:
     - JSON ↔ YAML
     - CSV ↔ JSON
     - XML ↔ JSON
   - يستخدم مكتبات:
     - `json`, `pyyaml`, `xmltodict`, `csv`, `pandas`

3. اكتشاف الأخطاء:
   - عند فتح ملف:
     - يتم فحص البنية
     - تنبيه بـ:
       > “السطر 15 يحتوي على فاصلة غير مغلقة”

4. التحرير:
   - يمكن:
     - الإضافة / الحذف / التحرير بالسحب
     - تعديل الخلايا مباشرة في الجداول
     - تغيير أسماء الحقول عبر واجهة مرئية

5. التصدير:
   - يتم حفظ الملفات:
     - بصيغ مختلفة
     - مع تحديد الترميز (UTF-8 أو غيره)

6. العرض:
   - عرض بصري لبيانات CSV:
     - جدول قابل للفرز – بحث سريع – تحديد متعدد

━━━━━━━━━━━━━━━━━━━━━━━━━━━
تم استكمال خطة 74 وسأبدأ مباشرة بتنفيذ خطة 75.