الخطة 129: مكتبة رسومية لعرض العلاقات بين الملفات (Dependency Graph)

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ الهدف:
توفير تصور مرئي داخل التطبيق يُظهر كيفية ترابط ملفات المشروع، والتبعيات بينها، مثل: من يستورد من، التكرار، التبعيات الدائرية، والأولوية في التحميل.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ المكونات الأساسية:
1. محلل بنية المشروع (Dependency Parser).
2. محرك رسم بياني تفاعلي.
3. كشف التبعيات بين الملفات (import, require, include…).
4. عرض التبعيات الداخلية والخارجية.
5. دعم النقر على أي عقدة للانتقال للملف.
6. تحذير من التبعيات الدائرية أو المعقدة.
7. حفظ المخطط التفاعلي بصيغة JSON أو صورة.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ التفاصيل البرمجية الدقيقة:

1. التحليل:
   - Python: تحليل `import` و `from ... import`
   - JS: `require()`, `import`
   - PHP: `include`, `require`, `use`

2. الرسم البياني:
   - استخدام مكتبات مثل:
     - `pyvis`, `networkx`, `graphviz` أو WebView بـ D3.js
   - العقد = ملفات، الأسهم = علاقات

3. الميزات الإضافية:
   - زر: [إظهار الملفات المستقلة فقط]
   - فلتر: [إخفاء تبعيات الطرف الثالث]

4. الأداء:
   - بناء الرسم مرة واحدة وتحديثه عند كل تعديل أو حفظ

5. التصدير:
   - صورة: PNG، SVG
   - ملف: `dependencies.json`

━━━━━━━━━━━━━━━━━━━━━━━━━━━
تم توليد الخطة 129 بنجاح.