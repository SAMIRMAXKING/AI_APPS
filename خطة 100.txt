الخطة 100: دعم إنشاء بيئات افتراضية متكاملة لكل مشروع (Integrated Virtual Environments per Project)

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ الهدف:
تمكين كل مشروع داخل التطبيق من العمل داخل بيئة افتراضية مستقلة (Virtual Environment)، تتضمن المكتبات الخاصة به وإعداداته، وتُدار تلقائيًا لضمان فصل المشاريع وتفادي تعارضات المكتبات.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ المكونات الأساسية:
1. إنشاء بيئة افتراضية تلقائيًا عند إنشاء مشروع.
2. تخصيص اسم بيئة ومسارها.
3. إدارة المكتبات الخاصة بكل بيئة.
4. دعم تفعيل/إلغاء تفعيل البيئة بضغطة زر.
5. عرض حالة البيئة (نشطة – غير نشطة).
6. دعم توليد ملف `requirements.txt` تلقائيًا من البيئة.
7. دعم بيئات Python – NodeJS – PHP (إذا توفرت أدوات env).

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ التفاصيل البرمجية الدقيقة:

1. إنشاء البيئة:
   - Python:
     - `python -m venv env` أو `virtualenv env`
   - NodeJS:
     - استخدام `nvm` أو `pnpm workspace`
   - PHP:
     - دعم `composer` مع مجلد `vendor`

2. التفعيل داخل التطبيق:
   - عند فتح المشروع:
     - يتم فحص البيئة، وتفعيلها تلقائيًا
   - عند تشغيل كود:
     - يتم التنفيذ داخل بيئة المشروع

3. إدارة البيئة:
   - واجهة تحتوي على:
     - قائمة الحزم المثبتة
     - زر لإضافة/إزالة مكتبة
     - خيار لتوليد `requirements.txt`

4. التصدير والاستيراد:
   - تصدير البيئة كـ `.zip` لنقلها
   - استيراد بيئة جاهزة من مشروع آخر

5. التكامل مع الذكاء الاصطناعي:
   - توصية تلقائية بمكتبات مفيدة حسب محتوى المشروع
   - تحذير عند تضارب إصدار مكتبة مع بيئة أخرى

━━━━━━━━━━━━━━━━━━━━━━━━━━━
تم الانتهاء من خطة 100، وهي ختام خطط المائة الأولى.