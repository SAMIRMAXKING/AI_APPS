الخطة 16: نظام تتبع الأخطاء الحي داخل بيئة التنفيذ (Live Debug Tracker)

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ الهدف:
بناء نظام يقوم بتتبع الأخطاء والاستثناءات في الوقت الحقيقي أثناء تنفيذ الكود داخل التطبيق، مع تقديم تقارير فورية وتوضيح سياق الخطأ وربطه بالكود المصدر.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ المكونات الأساسية:
1. مراقب استثناءات لحظي (Real-Time Exception Hook).
2. مصور مكدس الاستدعاء (Stack Trace Visualizer).
3. سجل أخطاء قابل للبحث.
4. تنبيهات فورية للمطور داخل الواجهة.
5. دعم حفظ الجلسات وتصنيف الأخطاء.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ التفاصيل البرمجية الدقيقة:

1. اعتراض الأخطاء تلقائيًا:
   - باستخدام `sys.excepthook`:
     ```python
     import sys, traceback
     def custom_hook(exctype, value, tb):
         log_error(traceback.format_exception(exctype, value, tb))
     sys.excepthook = custom_hook
     ```

2. توثيق الخطأ:
   - حفظ كل استثناء في ملف JSON مع:
     - نوع الخطأ
     - الملف/السطر
     - الوقت
     - مخرجات متعلقة

3. واجهة عرض الأخطاء:
   - عند حدوث الخطأ، تظهر نافذة جانبية:
     ```
     ❌ ZeroDivisionError
     الملف: calculator.py - السطر 22
     ```

4. التفاعل:
   - يمكن للمطور إضافة ملاحظة أو تحديد "تم الإصلاح"
   - يمكن عرض سجل الأخطاء حسب التاريخ أو النوع

━━━━━━━━━━━━━━━━━━━━━━━━━━━
تم توليد الخطة 16 بنجاح.