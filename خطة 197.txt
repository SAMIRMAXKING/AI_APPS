الخطة 197: وحدة تحليل الاعتمادات والمكتبات الخارجية (Dependency Analyzer)

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ الهدف:
تحليل جميع المكتبات والاعتمادات البرمجية التي يستخدمها المشروع، مع تقديم تقرير مفصل يشمل التوافق، التكرار، التحديثات المتاحة، والمكتبات المهجورة أو غير الآمنة.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ المكونات الأساسية:
1. استخراج جميع الاعتمادات من المشروع.
2. تحليل الإصدار المستخدم مقابل أحدث إصدار.
3. فحص أمان الاعتماد (هل به ثغرات معروفة؟).
4. الكشف عن المكتبات المكررة أو غير المستخدمة.
5. توليد تقرير شامل بصيغة مرئية ونصية.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ التفاصيل البرمجية الدقيقة:

1. استخراج الاعتمادات:
   - قراءة ملفات `requirements.txt`, `pyproject.toml`, `Pipfile`.
   - دعم التحليل التلقائي من الكود باستخدام `ast` لاكتشاف `import`.

2. تحليل الإصدارات:
   - الاتصال بـ PyPI لجلب أحدث إصدار لكل مكتبة.
   - عرض مقارنة بين الإصدار الحالي والمتاح.

3. التحقق من الأمان:
   - استخدام قاعدة بيانات مثل `Safety DB` أو `OSV` للكشف عن CVEs.
   - تنبيه المستخدم في حال وجود ثغرة.

4. تكرار واستخدام:
   - كشف المكتبات الموجودة في الملفات لكن غير مستخدمة.
   - تنبيه في حال تكرار نفس المكتبة في أكثر من ملف مع إصدارات مختلفة.

5. التقرير:
   - عرض جدول مفصل داخل التطبيق.
   - إمكانية تصدير التقرير بصيغة PDF أو Markdown أو HTML.
   - تضمين توصيات للتحديث أو الإزالة.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
تم توليد الخطة 197 بنجاح.
