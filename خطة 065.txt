الخطة 65: دعم النوافذ المتعددة والمنبثقة الديناميكية (Dynamic Multi-Window Interface)

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ الهدف:
تمكين المستخدم من فتح أكثر من نافذة داخل التطبيق (مثل النوافذ العائمة، النوافذ المنبثقة، النوافذ القابلة للتثبيت والسحب)، لتعزيز الإنتاجية وتعدد المهام، مع دعم السحب والإفلات والتخصيص الكامل.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ المكونات الأساسية:
1. فتح ملفات متعددة في نوافذ مستقلة داخل واجهة التطبيق.
2. دعم نوافذ منبثقة (Modal – Floating).
3. دعم Docking (تثبيت نافذة يمين/يسار/أسفل).
4. واجهة سحب وإفلات بين النوافذ.
5. تكبير / تصغير / إغلاق لكل نافذة.
6. حفظ حالة ترتيب النوافذ.
7. دعم أنماط العرض مثل “مقسم رأسيًا / أفقيًا / شبكيًا”.

━━━━━━━━━━━━━━━━━━━━━━━━━━━
■ التفاصيل البرمجية الدقيقة:

1. إنشاء نافذة جديدة:
   - عند فتح ملف أو مشروع جديد:
     - يُفتح في نافذة مستقلة داخل الـ main layout
     - كل نافذة تحتوي على:
       - اسم الملف – زر إغلاق – زر تكبير

2. Docking:
   - دعم أدوات مثل `PyQt Dock Widgets` أو `Electron Drag Layout`
   - المستخدم يمكنه سحب نافذة الكود إلى:
     - يسار الشاشة → تصبح لوحة جانبية
     - أسفل الشاشة → كنافذة إخراج

3. النوافذ المنبثقة:
   - تظهر للتأكيد / التفاصيل / الإشعارات
   - مثال: "هل ترغب بحفظ التعديلات؟"
   - يمكن تخصيص الأزرار – المؤثرات – الشفافية

4. السحب والإفلات:
   - يمكن سحب ملف من شجرة الملفات → إلى نافذة جديدة
   - أو سحب كود → من نافذة إلى أخرى

5. الحفظ والاستعادة:
   - عند إغلاق التطبيق:
     - يتم حفظ حالة النوافذ
     - عند الفتح يتم استعادتها كما كانت

6. تخصيص:
   - المستخدم يمكنه:
     - قفل نوافذ – تغيير حجمها – تغيير ترتيبها
     - استخدام نمط “عرض الشبكة” للعمل المتوازي

━━━━━━━━━━━━━━━━━━━━━━━━━━━
تم استكمال خطة 65 وسأتابع تنفيذ خطة 66 فورًا.